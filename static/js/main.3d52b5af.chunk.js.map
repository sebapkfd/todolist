{"version":3,"sources":["methods/task.js","methods/saveTask.js","redux/todoSlice.js","methods/getTodos.js","components/Input.js","components/Edit.js","methods/dateFormat.js","components/Info.js","components/Todo.js","components/List.js","App.js","redux/store.js","index.js"],"names":["Task","title","id","date","priority","status","saveTask","task","localStorage","setItem","JSON","stringify","initialState","length","Object","keys","map","key","parse","getItem","getTodos","todoSlice","createSlice","name","reducers","addTodo","state","action","push","payload","changeStatus","newStatus","itemToChange","find","item","removeTodo","itemToDelete","indexToDelete","indexOf","splice","updateTodo","itemToUpdate","actions","Input","useState","setTitle","setDate","setPriority","display","setDisplay","dispatch","useDispatch","handleSubmit","e","preventDefault","onSubmit","className","htmlFor","type","value","required","maxLength","onChange","target","onClick","Edit","values","dateFormat","dateStr","aux","split","join","Info","todo","checked","updatedTodo","updateStatus","Todo","showEdit","setShowEdit","edit","editLabel","removeItem","List","list","useSelector","filter","setFilter","Math","random","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3d52b5af.chunk.js","sourcesContent":["const Task = (title, id, date, priority ) =>{\r\n    return {\r\n        title,\r\n        id,\r\n        date,\r\n        priority,\r\n        status: false\r\n    };\r\n};\r\n\r\nexport default Task;","const saveTask = (task) => {\r\n    localStorage.setItem(task.id, JSON.stringify(task));\r\n}\r\n\r\nexport default saveTask;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport getTodos from '../methods/getTodos';\r\n\r\nconst initialState = getTodos();\r\n\r\nconst todoSlice = createSlice({\r\n    name: 'todo',\r\n    initialState,\r\n    reducers: {\r\n        addTodo(state, action) {\r\n            state.push(action.payload)\r\n        },\r\n        changeStatus(state, action) {\r\n            const {id, newStatus} = action.payload\r\n            const itemToChange = state.find(item => item.id === id)\r\n            if (itemToChange) {\r\n                itemToChange.status = newStatus\r\n            }\r\n        },\r\n        removeTodo(state, action) {\r\n            const { id } = action.payload\r\n            const itemToDelete = state.find(item => item.id === id)\r\n            if (itemToDelete) {\r\n                const indexToDelete = state.indexOf(itemToDelete)\r\n                state.splice(indexToDelete, 1)\r\n            }\r\n        },\r\n        updateTodo(state, action) {\r\n            const { id, title, date, priority } = action.payload\r\n            const itemToUpdate = state.find(item => item.id === id)\r\n            if (itemToUpdate) {\r\n                itemToUpdate.title = title\r\n                itemToUpdate.date = date\r\n                itemToUpdate.priority = priority\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addTodo, changeStatus, removeTodo, updateTodo } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;","const getTodos = () => {\r\n    if (localStorage.length > 0) {\r\n        return Object.keys(localStorage).map((key) => JSON.parse(localStorage.getItem(key)));\r\n    }\r\n    return []\r\n}\r\n\r\nexport default getTodos;","import React, { useState } from \"react\";\r\nimport Task from \"../methods/task\";\r\nimport saveTask from \"../methods/saveTask\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../redux/todoSlice\";\r\n\r\nconst Input = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [priority, setPriority] = useState('Low');\r\n    const [display, setDisplay] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const clearInputs = () => {\r\n        setTitle('');\r\n        setDate('');\r\n        setPriority('Low');\r\n        setDisplay(false);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const id = `${localStorage.length}${title}`;\r\n        const task = Task(title, id, date, priority);\r\n        saveTask(task);\r\n        dispatch(addTodo(task));\r\n        clearInputs();\r\n    }\r\n    \r\n    return (display) ? (\r\n        <form onSubmit={(e) => handleSubmit(e)} className={'input'}>\r\n            <div className={'form__section'}>\r\n                <label htmlFor='title'>Title</label>\r\n                <input \r\n                type ='text' \r\n                name='title' \r\n                value={title} \r\n                required \r\n                maxLength={15}\r\n                onChange={(e) =>setTitle(e.target.value)} \r\n                />\r\n            </div>\r\n            <div className={'form__section'}>\r\n                <label htmlFor='date' id='date__label'>Date</label>\r\n                <input \r\n                type ='date' \r\n                name='date' \r\n                value={date} \r\n                required\r\n                onChange={(e) =>setDate(e.target.value)} \r\n                />\r\n            </div>\r\n            <div className={'form__section'}>\r\n                <label htmlFor='priority'>Priority</label>\r\n                <select value={priority} onChange={(e) =>setPriority(e.target.value)}>\r\n                    <option value=\"Low\">Low</option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"High\">High</option>\r\n                </select>\r\n            </div>\r\n            <div className={'form__section'}>\r\n                <button type='submit'>Ok</button>\r\n                <button onClick={() => setDisplay(false)} type='reset'>Cancel</button>\r\n            </div>\r\n        </form>\r\n    ) : (\r\n        <div>\r\n            <button onClick={() => setDisplay(true)}>Add To do</button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Input;","import React, { useState } from \"react\";\r\nimport Task from \"../methods/task\";\r\nimport saveTask from \"../methods/saveTask\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateTodo } from '../redux/todoSlice';\r\n\r\nconst Edit = ({ values, values: { id } }) => {\r\n    const [title, setTitle] = useState(values.title);\r\n    const [date, setDate] = useState(values.date);\r\n    const [priority, setPriority] = useState(values.priority);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const task = Task(title, id, date, priority);\r\n        saveTask(task);\r\n        dispatch(updateTodo(task));\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => handleSubmit(e)} className={'edit'}>\r\n            <div className={'form__section'}>\r\n                <label htmlFor='title'>Title</label>\r\n                <input \r\n                    type ='text' \r\n                    name='title' \r\n                    value={title} \r\n                    maxLength={15}\r\n                    onChange={(e) =>setTitle(e.target.value)} \r\n                    required \r\n                />\r\n            </div>\r\n            <div className={'form__section'}>\r\n                <label htmlFor='date' id='date__label'>Date</label>\r\n                <input \r\n                    type ='date' \r\n                    name='date' \r\n                    value={date} \r\n                    onChange={(e) =>setDate(e.target.value)} \r\n                    required \r\n                />\r\n            </div>\r\n            <div className={'form__section'}>\r\n                <label htmlFor='priority'>Priority</label>\r\n                <select value={priority} onChange={(e) =>setPriority(e.target.value)}>\r\n                    <option value=\"Low\">Low</option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"High\">High</option>\r\n                </select>\r\n            </div>\r\n            <div className={'form__section'}>\r\n                <button type='submit'>Ok</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Edit;","const dateFormat = (dateStr) =>{\r\n    let aux = dateStr.split(/\\D/g);\r\n    return [aux[2],aux[1],aux[0] ].join(\"-\");\r\n};\r\n\r\nexport default dateFormat;","import saveTask from \"../methods/saveTask\";\r\nimport dateFormat from \"../methods/dateFormat\";\r\nimport { changeStatus } from \"../redux/todoSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Info = ({todo, todo : { title, id, date, priority, status }}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const updateStatus = () => {\r\n        const newStatus = !status;\r\n        const updatedTodo = {...todo, status: newStatus};\r\n        dispatch(changeStatus({id, newStatus}));\r\n        saveTask(updatedTodo);\r\n    }\r\n    \r\n    return (\r\n        <div className={'info'}>\r\n            <input type='checkbox' id='checkbox' checked={status} onChange={() => updateStatus()} />\r\n            <p className={'todo__title'}>{title}</p>\r\n            <p>{dateFormat(date)}</p>\r\n            <p>{priority} priority</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Info;","import Edit from \"./Edit\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeTodo } from \"../redux/todoSlice\";\r\nimport { useState } from \"react\";\r\nimport Info from \"./Info\";\r\n\r\nconst Todo = ({ todo, todo: { id }}) => {\r\n    const [showEdit, setShowEdit] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteTodo = () => {\r\n        dispatch(removeTodo({id}));\r\n        localStorage.removeItem(id);\r\n    }\r\n\r\n    const edit = (showEdit) ? <Edit values={todo} /> : null;\r\n    const editLabel = (showEdit) ? 'Cancel' : <span className=\"material-icons\" id=\"edit-logo\">mode_edit</span>;\r\n\r\n    return (\r\n        <div className={'todo'}>\r\n            <Info todo={todo}/>\r\n            <div className={'options'}>\r\n                <button onClick={() => deleteTodo()} className='todo__button'>\r\n                    <span className=\"material-icons\" id=\"delete-icon\">delete</span>\r\n                </button>\r\n                <button onClick={() => setShowEdit(!showEdit)} className='todo__button'>{editLabel}</button>\r\n            </div>\r\n            {edit}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst List = () => {\r\n    const list = useSelector(state => state.todo);\r\n    const [filter, setFilter] = useState('All');\r\n\r\n    return (list) ? (\r\n        <div id='todolist'>\r\n            <div id='filters'>\r\n                <button onClick={()=> setFilter('All')}>All</button>\r\n                <button onClick={()=> setFilter(false)}>Completed</button>\r\n                <button onClick={()=> setFilter(true)}>Not Completed</button>\r\n            </div>\r\n            {list.filter(item => item.status !== filter)\r\n                .map(todo => <Todo todo={todo} key={Math.random()*100}/>)\r\n            }\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\nexport default List;","import './App.css';\r\nimport Input from './components/Input';\r\nimport List from './components/List';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>To do List</h1>\r\n      <Input />\r\n      <List />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from '../redux/todoSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        todo: todoReducer\r\n    }\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}